= 学問への扉：計算機プログラミング入門

== Pyxelをつかったプログラミング

引き続き
https://github.com/kitao/pyxel/blob/main/docs/README.ja.md[Pyxel] をつかって，
ボールに当たらないようにキャラを動かすゲームを作っていく．

=== 前回の課題：ボールを２個にする

ヒント：
もとのプログラムでは，
`ball = Ball(....)` で，１個ボールがつくられ，
それを変数 `ball` で指し示している．

２個ボールつくるには，２個変数をつくって，２回 `Ball()` を呼び出せばよい．
たとえば，

[source,python]
----
ball1 = Ball(0, 0, 5, 7)
ball2 = Ball(100, 0, 4, 4)
----

`update()` もそれぞれに実行する．

[source,python]
----
    ball1.update()
    ball2.update()
----

`draw()` も同じ．

CLEに，できたとこまででよいので，２個のボールにしたプログラムを提出してください．
締め切り：今週の金曜日まで．

余裕がある人は以下をためしてみてください．
意味が分からないかもしれないので，分からなければ来週実施してください．

=== サウンド

サウンドを足してみよう．

サウンドやグラフィックスのデータは，ファイルに保存して，プログラムから読み込む．

このデータを入れたファイルを編集するには，
Pyxel Editor を，ターミナルから実行しないといけない．（Windows，Macどちらも．）

* まず，アプリとして，ターミナルを開く

* プログラムを置いているフォルダに，ターミナルのフォルダを移動．

別のページにターミナルの使い方を記載している．

////
# MacでのPyxelの使い方のところに，ターミナルの使い方を記載している．Windowsでも，ほぼいっしょ．
# 意味が分らなければ，ターミナルにでている， `PS C:\Users\tatsu> ` みたいな表示で，
# 今のフォルダを確認するだけでもよい．
# この場合は，Cドライブの下の，Usersの下の，tatsuというフォルダになる．
////

* ターミナルから `pyxel edit`  と打って，Pyxel Editorを実行．

実行したフォルダの中に，`my_resource.pyxres` というファイルができる．
ここにサウンドやグラフィックスが保存される．
再度，`pyxel edit` を実行すると，このファイルが読み込まれる．
（別のファイル名を， `pyxel edit` につづけて指定することもことも可能．)

ここではボールとの衝突音を考える．
まず，∿のページ（♬のとなり）をつかって，SOUNDの0番に適当な音を作成する．SPEEDを1～3くらいにすれば，それっぽく聞こえる．
つくったら↓を押して保存．

できたmy_resource.pyxres を，プログラムを置いているフォルダにコピーする．
もともとターミナルのフォルダが，プログラムと同じならコピーは不要．

以下は，この音を鳴らすだけのプログラム．
`pyxel.play(チャネルの番号0～3, SOUNDの番号)` で音がでる．

[source,python]
----
import pyxel
import time  # ゲームのときは不要

pyxel.init(256, 256)
pyxel.load("my_resource.pyxres")  # データファイル読込

pyxel.play(2, 0)  # チャンネル2にSOUND 0を流す

# 1秒まつ．ゲームの時は不要．
# プログラムがすぐ終わって音がならないのを防ぐ
time.sleep(1)
----

==== 練習

サウンドを作って，ボールゲームで音を流そう．

=== ドット絵のキャラクターを表示

来週しますが，時間があまった人は，ボールをドット絵にしてみよう．

Pyxel Editorを実行して，キャラの絵をかいてみる．

キャラの絵は，イメージバンクという256ピクセル×256ピクセルのキャンバスの一部にかく．
イメージバンクは，0,1,2の３つ．
キャラを表示するときは，`pyxel.blt()` をつかって，
座標を指定してイメージバンクから長方形の部分を取ってくる．

- `pyxel.blt(x, y, img, u, v, w, h, [colkey])`

使い方：イメージバンクimg(0-2) の座標 (u, v) からサイズ (w, h) の領域を，
画面の座標 (x, y) にコピーする．

w、hは，コピーする領域の幅と高さ．それぞれに負の値を設定すると水平、垂直方向に反転．

colkeyは指定しなくてもよい．色を指定すると透明色として扱われる．
