= 学問への扉：計算機プログラミング入門

== タイルマップ

タイルマップは，地形や背景を実現するのに便利な機能．


タイルマップは、256x256の行列。
0から7まで、8個のタイルマップがある。

1つのタイルマップの256×256=65536個のそれぞれのエントリをタイルとよぶ．
ここでは，それぞれのエントリを<0,0>, <1,0>,...<255,255>と，水平方向に左から何番目か，
上下方向に上から何番目かで表記する．

タイルは，(0, 0) から (31, 31)までの整数値のペアをもつ．
 (python言語ではタプルという形式になっている．)
この値のペアで，

- そのタイルがどのような地形を表しているか（たとえば，(0,1)は壁，(1,1)は空間など）

- タイルのグラフィックス

を表す．

タイルのグラフィックスは，イメージマップの中の8ドット×8ドットの領域の1つとなる．
どのイメージマップを使うかは，タイルを表示するときに指定する．

イメージマップを8x8の正方形の領域に分割すると，32x32=1024個の正方形が得られる．
タイルはその値のペアに従って，これらのうちのどれか1つに割り当てられる．

タイルの整数値のペアが(x, y)なら，
左からx番目，上からy番目の正方形（0から数える），つまり，
イメージマップの
座標(8x, 8y)から(8x+7, 8x+7)の領域に対応する．
たとえば，タイルの整数値のペアが(0, 0)ならイメージマップの座標(0, 0)から(7, 7)の領域に対応。
整数値のペアが(1, 0)なら座標(8, 0)から(15, 7)。
(1, 0)なら、座標(0, 8)から(7, 15)、
(1, 1)なら、(8, 8)から(15, 15)。


=== タイルマップの設定

pyxeleditorで編集できる．

以下は，pyxeleditorを使わないで，プログラムから設定する方法．

`pyxel.tilemap(0).set(x, y, ["0000"])`

タイル<x, y>に(0,0)を設定。"0000"の部分は16進数で，左2桁と右2桁でペアの左を右を表す。
10進法で31は16進法で1fなので，"0000"が(0,0), "1f1f"が(31,31)となる．

また，1命令で複数タイルに同時に設定できる。

`pyxel.tilemap(0).set(x, y, ["0000 0001", "0100 0101"])`

タイル<x, y>→(0,0), <x+1, y>→(0,1), <x, y+1>→(1,0), <x+1, y+1>→(1,1)


=== プログラムからタイルの情報を取得

`pyxel.tilemap(0).get(x, y)`

<x, y> のタイルの整数値のペアをゲット。

`(a, b) = pyxel.tilemap(0).get(10, 10)`

なら，<10,10>のタイルの整数値ペアがa,bに入る．


=== イメージマップの表示

`draw()` の中にかいておく。例

`pyxel.bltm(x, y, 0, 0, 0, 128, 128)`


意味：画面の座標(x,y)を左上として，タイルマップ0の(0,0)からドットで128x128分のタイルを表示。
1タイル8x8だから<0,0>から<15,15>までのタイルが表示される。

=== サンプルプログラム

迷路っぽい何か。

[source,python]
----
import pyxel
pyxel.init(128, 128)

# グラフィックス
# イメージバンク0に8x16のイメージを書き込む．座標0,0を左上とする．
pyxel.image(0).set(
    0,
    0,
    [
        "44444444",  # 壁
        "42222444",
        "44422244",
        "44222444",
        "42224424",
        "22244444",
        "44442222",
        "22444442",
        "55555555",  # 道
        "55555555",
        "55555555",
        "55555555",
        "55555555",
        "55555555",
        "55555555",
        "55555555"
    ])

# 迷路のデータ
maze = [
    "****************",
    "* **************",
    "* **************",
    "* **************",
    "* **************",
    "*    ***********",
    "* **  **********",
    "***  ***********",
    "*** ******** ***",
    "*** ***      ***",
    "*** *** ********",
    "***     ********",
    "******* ********",
    "******* ********",
    "******* ********",
    "****************"
]

# タイルマップへ迷路のデータを書き込む
# "*"" -> (0, 0), " " -> (0, 1) として，
# イメージバンク (0,0)-(7, 7), (0,8)-(7,15) に対応させる
for y in range(len(maze)):
    row = maze[y]
    for x in range(len(row)):
        if row[x] == "*":
            pyxel.tilemap(0).set(x, y, ["0000"])  # (0,0)
        elif row[x] == " ":
            pyxel.tilemap(0).set(x, y, ["0001"])  # (0,1)


class Player:
    def __init__(self):
        self.x = 8
        self.y = 8

    def update(self):
        newx = self.x
        newy = self.y
        if pyxel.btnp(pyxel.KEY_RIGHT):
            newx += 8
        elif pyxel.btnp(pyxel.KEY_LEFT):
            newx -= 8
        elif pyxel.btnp(pyxel.KEY_UP):
            newy -= 8
        elif pyxel.btnp(pyxel.KEY_DOWN):
            newy += 8
        # タイルマップから整数値のペア（タプル）を取得
        (a, b) = pyxel.tilemap(0).pget(newx//8, newy//8)
        if (a, b) == (0, 1):  # 道がある
            self.x = newx
            self.y = newy

    def draw(self):
        pyxel.rectb(self.x, self.y, 8, 8, 15)


def update():
    player.update()


def draw():
    pyxel.cls(0)
    # タイルマップを表示
    pyxel.bltm(0, 0, 0, 0, 0, 128, 128)
    player.draw()

player = Player()
pyxel.run(update, draw)
----
