= 学問への扉：計算機プログラミング入門

=== 前回課題の回答例
変数 `awin`, `bwin` で，勝った回数を記録．

////
.janken2.py
[source,python]
----
include::sources/janken2.py[lines=1..]
----
////

.janken2.py
[source,python]
----
import random
JAN = ('グー', 'チョキ', 'パー')

awin = 0
bwin = 0
while awin < 3 and bwin < 3:
    a = random.randint(0,2)
    b = ""
    while b != '0' and b != '1' and b != '2':
        print(0, JAN[0], 1, JAN[1], 2, JAN[2], '?')
        b = input()
    b = int(b) # 入力を整数に変換
    print('こちら', JAN[b])
    print('あいて', JAN[a])

    if a == b:
        print('あいこ')
    elif (a == 0 and b == 1) or (a == 1 and b == 2) or (a == 2 and b == 0):
        print('まけ :-(')
        awin = awin + 1
        print('あいて: ', awin, ' こちら: ', bwin)
    else:
        print('かち :-)')
        bwin = bwin + 1
        print('あいて: ', awin, ' こちら: ', bwin)
----


== 関数 (function)
関数(function)は，共通のプログラムをまとめた，プログラムの部品．
`def function_name():` で，宣言することができる．
関数の名前を書くことで呼び出す (call)．

----
>>> def factorial(n):
	result = 1
	for i in range(2, n+1):
		result = result * i
	return result

>>> factorial(1)
1
>>> factorial(10)
3628800
>>> factorial(3)
6
----

じゃんけんのプログラムの一部を関数にしてみる．

////
.janken3.py
[source,python]
----
include::sources/janken3.py[lines=1..]
----
////

.janken3.py
[source,python]
----
import random
JAN = ('グー', 'チョキ', 'パー')

awin = 0
bwin = 0

def show_wins():
    print('あいて: ', awin, ' こちら: ', bwin)

while awin < 3 and bwin < 3:
    a = random.randint(0,2)
    b = ""
    while b != '0' and b != '1' and b != '2':
        print(0, JAN[0], 1, JAN[1], 2, JAN[2], '?')
        b = input()
    b = int(b) # 入力を整数に変換
    print('こちら', JAN[b])
    print('あいて', JAN[a])

    if a == b:
        print('あいこ')
    elif (a == 0 and b == 1) or (a == 1 and b == 2) or (a == 2 and b == 0):
        print('まけ :-(')
        awin = awin + 1
        show_wins()
    else:
        print('かち :-)')
        bwin = bwin + 1
        show_wins()
----


また，関数は引数(ひきすう, parameter)として入力を受け取ったり，
結果を返したりすることができる．`return` を実行すると，
このキーワードの後に指定されている返り値 (戻り値, return value)を返して，関数から抜ける．

次のプログラムは，何をやっているのだろう？

////
.reverse.py
[source,python]
----
include::sources/reverse.py[lines=1..]
----
////

.reverse.py
[source,python]
----
def reverse(str):
    res = ""
    for c in str:
        res = c + res
    return res

s = input()
print(reverse(s))
----



==== 再帰プログラム recursive program
自分で自分をよびだすプログラム．動かかして，動作を理解しよう．

////
.reverse2.py
[source,python]
----
include::sources/reverse2.py[lines=1..]
----
////

.reverse2.py
[source,python]
----
def reverse(str):
    if str == "":
        return ""
    return reverse(str[1:]) + str[0]

s = input()
print(reverse(s))
----

=== Hangman

Hangman(相手の考えた単語を当てる2人用のゲーム)のプログラムをつくっていこう．
関数を一つずつつくって，最後にそれらをつかってプログラムを完成させる．

単語をランダムに選択．

----
>>> import random
>>> def get_word():
    WORDS = "turaco shoebill tropicbird eagle crane peafowl dove \
            hummingbird puffin cassowary lorikeet flamingo penguin \
            heron booby owl toucan".split()
    offset = random.randint(0, len(WORDS)-1)
    return WORDS[offset]

>>> get_word()
'peafowl'
----

単語を，指定された文字の部分だけ表示．
なお，`for` についている `else` の部分は，`break` が起らなかった場合にのみ実行される．

----
>>> def unmask_word(word, letters):
    st = ""
    for c in word:
        for l in letters:
            if c == l:
                st = st + c
                break
        else:
            st = st + "_"
    return st

>>> unmask_word("python", "opqr")
'p___o_'
----

一文字英字を入力．

----
>>> def input_letter():
    while True:
        print("英文字を1字入力")
        st = input()
        st = st.lower()
        if len(st) == 1:
            if st in 'abcdefghijklmnopqrstuvwxyz':
                break
    return st

>>> input_letter()
英文字を1字入力
ABC
英文字を1字入力
A
'a'
----

正解かどうかを判定．

----
>>> def is_correct(secretword, letters):
    for c in secretword:
        for l in letters:
            if c == l:
                break
        else:
            return False
    return True

>>> is_correct("python", "nohtyp")
True
>>> is_correct("python", "noh")
False
----

これらを使ってプログラムを完成させよう．
これらの関数のあとに，次のコードを追加したプログラムを動かしてみよう．

[source,python]
----
inputLetters = ""
secret = get_word()
st = unmask_word(secret, inputLetters)
print(st)
while is_correct(secret, inputLetters) == False:
    inputLetters = inputLetters + input_letter()
    st = unmask_word(secret, inputLetters)
    print(st)
----

=== 課題
入力することのできる回数を設定しよう．
さらに，間違える度に，ライフが減っていくのが分かるようにしてみよう．

=== 発展課題
アスキーアートで，元のゲームを再現してみよう．
----
>>> PIC1 = '''
 +---+
     |
     |
     |
    ==='''
>>> print(PIC1)

 +---+
     |
     |
     |
    ===
>>>
----

==== Pythonをインストールせずに自習する方法

Google accountがあれば，Google Colaboratory をつかってプログラミングできる．
以下は例．
https://colab.research.google.com/drive/1FRPJYCoxy4X1ifzwCRn3JtGCa9ROIfDP

また，webでプログラミングができるサイトもある．たとえば， https://paiza.io/
プログラミング言語は，Python 3を選択しよう．
